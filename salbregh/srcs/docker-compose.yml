# LINK: https://www.domysee.com/blogposts/reverse-proxy-nginx-docker-compose
# LINK 2: https://www.educative.io/blog/docker-compose-tutorial
# LINKE 3: https://medium.com/swlh/wordpress-deployment-with-nginx-php-fpm-and-mariadb-using-docker-compose-55f59e5c1a

version:  '3'
services: # this section defines all the different container we will create 
  nginx:  # name of the nginx app service, Docker compose will create containers with the name we provide
    build:
      context: requirements/nginx
    container_name: nginx
    image: nginx
    # specify a volume that replaces the default configuration file
    # volumes: ./nginx.conf:/ets/nginx/nginx.conf
    ports:
      - 443:80 # PAKT 80 UIT NGINX EN OPENT OP localhost:443
    links:
      - wordpress
    restart: always
    networks: 
      - inception
  
  mariadb:
    build:
      context: requirements/mariadb
    container_name: mariadb
    image: mariadb
    restart: always
    env_file:
      - ./.env
    networks: 
      - inception
    # volumes
  
  wordpress:
    build:
      context: requirements/wordpress
    container_name: wordpress
    image: wordpress
    restart: always
    env_file:
      - ./.env
    depends_on:
      - mariadb
    links:
      - mariadb
    networks: 
      - inception
    # volumes

networks: 
  inception:



# volumes efine persistent storage for docker containers. If an application
# writes somewhere no volume is defined, data will be lost when the container
# stops. There are 2 types of volumes: one that map a file or directory inside
# the container, and the ones that make a file or direcotry persistent 
# (named volumes).
# The first type: volumes that map a specific file into the ocntinaer
# is defined in this way:
# volumes:
  # - ./nginx.conf:/etc/nginx/nginx.conf
  # - /etc/letsencrypt/:/etc/letsencrypt/
# named volumes are specified as a seperate root configuration entry
# and directly on the container configuration
# (underneath nginx) volumes:
  # - "certificates:"

  # (as seperate underneath services) volumes:
    # certificates:

